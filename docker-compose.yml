version: '3'

services:
  db:
    image: mysql:8.0
    container_name: mysql
    restart: unless-stopped
    env_file: .env
    environment:
      - MYSQL_DATABASE=wordpress
    volumes:
      - dbdata:/var/lib/mysql
    command: '--default-authentication-plugin=mysql_native_password'
    networks:
      - app-network

  wordpress:
    depends_on:
      - db
    image: wordpress:php8.0-fpm 
    container_name: wordpress
    restart: unless-stopped
    env_file: .env
    environment:
      - WORDPRESS_DB_HOST=mysql:3306
      - WORDPRESS_DB_USER=$MYSQL_USER
      - WORDPRESS_DB_PASSWORD=$MYSQL_PASSWORD
      - WORDPRESS_DB_NAME=wordpress
    volumes:
      - /srv/www/wordpress:/var/www/html
    networks:
      - app-network

  webserver:
    depends_on:
      - wordpress
      - goaccess
    image: nginx:latest
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "37890:37890"
    volumes:
      # WordPress
      - /srv/www/wordpress:/var/www/html
      # Nginx configuration files and SSL certs/keys
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./nginx-conf:/etc/nginx/conf.d
      - /etc/letsencrypt:/etc/letsencrypt
      - /etc/nginx/ssl:/etc/nginx/ssl
      # Other websites
      - /home/simonxix/websites:/var/www/
      # GoAccess
      - ./goaccess/html:/srv/report
      - /home/simonxix/logs/nginx:/var/log/nginx
      - ./goaccess/data/access.conf:/etc/nginx/access.conf
    networks:
      - app-network

  certbot:
    depends_on:
      - webserver
    image: certbot/certbot
    container_name: certbot
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - /srv/www/wordpress:/var/www/html
    command: certonly --webroot --webroot-path=/var/www/html --email simonxix@simonxix.com --agree-tos --no-eff-email --force-renewal -d simonxix.com -d www.simonxix.com

  sandstorm:
    depends_on: 
      - webserver
    image: buildpack-deps
    restart: unless-stopped
    container_name: sandstorm
    volumes:
      - /opt/sandstorm:/opt/sandstorm
      - /home/simonxix/docker/sandstorm_ssl:/home/sandstorm/bin
      - /etc/nginx/ssl:/etc/nginx/ssl
    expose:
      - "443"
    privileged: true
    networks:
      - app-network
    entrypoint: 
      bash -c 'useradd --system --user-group sandstorm && /opt/sandstorm/sandstorm start && tail -f /opt/sandstorm/var/log/sandstorm.log & sleep infinity'

  php:
    container_name: php
    image: php:8.0-fpm
    env_file:
       - /home/simonxix/websites/politics_of_patents_search/config.env
    volumes:
       - /home/simonxix/websites:/var/www
    networks:
       - app-network

        #solr:
        #container_name: solr
        #image: solr:latest
        #ports:
        #- '8983:8983'
        #volumes:
        #- solrdata:/var/solr
        #networks:
        #- app-network

  goaccess:
    # build and Nginx config from https://github.com/icamys/docker-goaccess-nginx
    build:
       context: ./goaccess
       dockerfile: Dockerfile
       args:
          ALPINE_VERSION: 3.10.2
    restart: unless-stopped
    container_name: goaccess
    expose:
       - "7890"
    volumes:
       - ./goaccess/data:/srv/data
       - ./goaccess/html:/srv/report
       - /home/simonxix/logs/nginx:/var/log/nginx/
       - ./goaccess/data/database:/tmp
    networks:
       - app-network

  joplin:
    container_name: joplin
    image: joplin/server:latest
    restart: unless-stopped
    environment: 
       - APP_BASE_URL=$APP_BASE_URL
       - APP_PORT=22300
       - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
       - POSTGRES_DATABASE=$POSTGRES_DATABASE
       - POSTGRES_USER=$POSTGRES_USER
       - POSTGRES_PORT=$POSTGRES_PORT
       - POSTGRES_HOST=postgres
       - DB_CLIENT=pg
    ports:
       - '22300:22300'
    networks:
       - app-network

  postgres:
    container_name: postgres
    image: postgres:13.1
    ports:
       - "5432:5432"
    volumes:
       - ./joplin-data:/var/lib/postgresql/data
    environment:
       - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
       - POSTGRES_USER=$POSTGRES_USER
       - POSTGRES_DB=$POSTGRES_DATABASE
    networks:
       - app-network

  wikiheist:
    build: /home/simonxix/wikiheist/web
    container_name: wikiheist
    expose:
      - 5000
    env_file:
      - /home/simonxix/wikiheist/.env.prod
    command: gunicorn --workers=3 --bind 0.0.0.0:5000 manage:app --timeout 120
    networks:
      - app-network

  tor:
    # experiments with Tor services in Docker based on https://github.com/torservers/onionize-docker
    container_name: tor
    image: torservers/onionize
    restart: always
    volumes:
       - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
       - app-network
       - onion-network
  
  onion-nginx:
    container_name: onion-nginx
    image: nginx:latest
    volumes:
       - /home/simonxix/websites/testing:/var/www/html
       - ./nginx-conf/onion:/etc/nginx/conf.d
    environment:
       - ONIONSERVICE_NAME=onion-nginx
    networks:
       - onion-network

  plex:
    image: plexinc/pms-docker
    container_name: plex
    ports:
      - "32400:32400/tcp"
      - "1900:1900/udp"
      - "3005:3005/tcp"
      - "5353:5353/udp"
      - "8324:8324/tcp"
      - "32410:32410/udp"
      - "32412-32414:32412-32414/udp"
      - "32469:32469/tcp"
    volumes:
      - /plex/database:/config
      - /plex/transcode/temp:/transcode
      - /plex/media:/data
    networks:
      - app-network
    restart: always
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - VIRTUAL_HOST=$VIRTUAL_HOST
      - VIRTUAL_PORT=$VIRTUAL_PORT
      - PLEX_CLAIM=$PLEX_CLAIM

  carbon:
    build: /home/simonxix/websites/carbon-graph/web
    container_name: carbon
    expose:
      - 5000
    volumes:
      - /home/simonxix/websites/carbon-graph/README.md:/code/README.md
    env_file:
      - /home/simonxix/websites/carbon-graph/.env.prod
    command: gunicorn --bind 0.0.0.0:5000 manage:app --timeout 120
    networks:
      - app-network

  website:
    build: /home/simonxix/websites/simonxix.com/web
    container_name: website
    expose:
      - 5000
    volumes:
      - /home/simonxix/websites/simonxix.com/web:/code
    env_file:
      - /home/simonxix/websites/simonxix.com/.env.prod
    command: gunicorn --bind 0.0.0.0:5000 manage:app --timeout 120
    networks:
      - app-network
      - onion-network

volumes:
  dbdata:
  solrdata:

networks:
  app-network:
    driver: bridge
  onion-network:
    driver: bridge
    driver_opts:
       enable_ip_masquerade: "false"
